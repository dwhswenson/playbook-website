name: Upload to staging

on:
  workflow_run:
    workflows: ["Build from PR"]
    types:
      - completed

jobs:
  stage-from-artifact:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      statuses: write

    steps:
      - name: Get metadata
        uses: dwhswenson/static-site-workflow/actions/get-metadata@main
        with:
          run-id: ${{ github.event.workflow_run.id }}
          name: "metadata"
          github-token: ${{ secrets.GITHUB_TOKEN }}
        
      - uses: myrotvorets/set-commit-status-action@v2.0.1
        with:
          status: pending
          sha: ${{ env.PR_HEADSHA }}
          context: 'Upload to staging'
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: dwhswenson/static-site-workflow/actions/upload-site@main
        with:
          aws-region: us-east-2
          aws-role: ${{ secrets.STAGING_ROLE }}
          bucket-name: ${{ secrets.STAGING_BUCKET }}
          cloudfront-distribution: ${{ secrets.STAGING_CLOUDFRONT }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pr-number: ${{ env.PR_NUM }}

      - uses: dwhswenson/static-site-workflow/actions/update-staging-index@main
        with:
          aws-region: us-east-2
          aws-role: ${{ secrets.STAGING_ROLE }}
          bucket-name: ${{ secrets.STAGING_BUCKET }}
          website-url: ${{ vars.STAGING_WEBSITE }}

      # we need metadata for later workflows (staging comment)
      - name: Reupload metadata
        uses: actions/upload-artifact@v4
        with:
          name: metadata
          path: metadata.json
          if-no-files-found: error
          retention-days: 1

      - uses: myrotvorets/set-commit-status-action@v2.0.1
        if: ${{ always() }}
        env:
          DEPLOY_SUCCESS: Successfully staged preview.
          DEPLOY_FAILURE: Failed to stage preview.
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status == 'success' && 'success' || 'failure' }}
          sha: ${{ env.PR_HEADSHA }}
          context: 'Upload to staging'
          description: ${{ job.status == 'success' && env.DEPLOY_SUCCESS || env.DEPLOY_FAILURE }}
