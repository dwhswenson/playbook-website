name: Upload to staging

on:
  workflow_run:
    workflows: ["Build from PR"]
    types:
      - completed

jobs:
  stage-from-artifact:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write

    outputs:
      deployment_url: ${{ steps.deploy.outputs.deployment-url }}
      pr_number: ${{ env.PR_NUM }}

    steps:
      # TODO: get metadata from the workflow_run
      - name: Get metadata
        uses: dwhswenson/static-site-workflow/actions/get-metadata@main
        with:
          run-id: ${{ github.event.workflow_run.id }}
          name: "metadata"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: myrotvorets/set-commit-status-action@v2.0.1
        with:
          status: pending
          sha: ${{ env.PR_HEADSHA }}
          context: 'Upload to Cloudflare'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          name: "site-build"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Unpack artifact
        run: |
          tar -xzf site.tgz
          rm site.tgz

      - name: Upload to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        id: deploy
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy _site --project-name ${{ vars.CLOUDFLARE_PROJECT_NAME }} --branch pr${{ env.PR_NUM }}

      - uses: myrotvorets/set-commit-status-action@v2.0.1
        if: ${{ always() }}
        env:
          DEPLOY_SUCCESS: Successfully staged preview.
          DEPLOY_FAILURE: Failed to stage preview.
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status == 'success' && 'success' || 'failure' }}
          sha: ${{ env.PR_HEADSHA }}
          context: 'Upload to Cloudflare'
          description: ${{ job.status == 'success' && env.DEPLOY_SUCCESS || env.DEPLOY_FAILURE }}

  comment-on-pr:
    runs-on: ubuntu-latest
    needs: stage-from-artifact
    if: ${{ needs.stage-from-artifact.outputs.deployment_url != '' }}
    permissions:
      pull-requests: write

    steps:
      - name: Post comment with metadata
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ needs.stage-from-artifact.outputs.pr_number }}
          message: |
            This PR has been staged at ${{ needs.stage-from-artifact.outputs.deployment_url }}.
