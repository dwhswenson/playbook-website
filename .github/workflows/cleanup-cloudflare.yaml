name: Cleanup staging
description: Cleanup staging environment; this occurs on PR merge or close

on:
  pull_request:
    types: [closed]

jobs:
  cleanup-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Number
        run: echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - name: Delete Cloudflare Preview Deployment
        run: |
          BRANCH_NAME="pr${PR_NUMBER}"
          echo "Deleting all deployments for branch: $BRANCH_NAME"

          DEPLOYMENTS=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/projects/${{ vars.CLOUDFLARE_PROJECT_NAME }}/deployments" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json")

          IS_SUCCESS=$(echo "$DEPLOYMENTS" | jq -r '.success')
          if [ "$IS_SUCCESS" != "true" ]; then
            echo "Cloudflare API call was not successful. Response:"
            echo "$DEPLOYMENTS"
            exit 1
          fi

          DEPLOYMENT_IDS=$(echo "$DEPLOYMENTS" | jq -r --arg branch "$BRANCH_NAME" '.result[]? | select(.deployment_trigger.metadata.branch == $branch) | .id')
          if [ -z "$DEPLOYMENT_IDS" ]; then
            echo "No deployments found for branch: $BRANCH_NAME"
            exit 0
          fi

          echo "Deleting the following deployments:"
          echo "$DEPLOYMENT_IDS"

          for ID in $DEPLOYMENT_IDS; do
            echo "Deleting Deployment ID: $ID"
            curl -s -X DELETE \
              "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/projects/${{ vars.CLOUDFLARE_PROJECT_NAME }}/deployments/$ID?force=true" \
              -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
              -H "Content-Type: application/json"
          done

